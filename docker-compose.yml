#
# xRM 
# Copyright (C) 2021 5G-ZORRO team (https://www.5gzorro.eu/)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

version: '3.5'

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/24

volumes:
  data-elasticsearch:
  data-mongo:

services:

  # Gravitee 
  mongodb:
    image: mongo:${MONGODB_VERSION:-3.6}
    container_name: gio_apim_mongodb
    restart: always
    volumes:
      - data-mongo:/data/db
      - ./logs/apim-mongodb:/var/log/mongodb

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION:-7.7.0}
    container_name: gio_apim_elasticsearch
    restart: always
    volumes:
      - data-elasticsearch:/usr/share/elasticsearch/data
    environment:
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile: 65536

  gateway:
    image: graviteeio/apim-gateway:${APIM_VERSION:-3}
    container_name: gio_apim_gateway
    restart: always
    ports:
      - "8082:8082"
    depends_on:
      - mongodb
      - elasticsearch
    volumes:
      - ./logs/apim-gateway:/opt/graviteeio-gateway/logs
    environment:
      - gravitee_management_mongodb_uri=mongodb://mongodb:27017/gravitee?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_ratelimit_mongodb_uri=mongodb://mongodb:27017/gravitee?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_reporters_elasticsearch_endpoints_0=http://elasticsearch:9200

  management_api:
    image: graviteeio/apim-management-api:${APIM_VERSION:-3}
    container_name: gio_apim_management_api
    restart: always
    ports:
      - "8083:8083"
    links:
      - mongodb
      - elasticsearch
    depends_on:
      - mongodb
      - elasticsearch
    volumes:
      - ./logs/apim-management-api:/opt/graviteeio-management-api/logs
    environment:
      - gravitee_management_mongodb_uri=mongodb://mongodb:27017/gravitee?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_analytics_elasticsearch_endpoints_0=http://elasticsearch:9200

  management_ui:
    image: graviteeio/apim-management-ui:${APIM_VERSION:-3}
    container_name: gio_apim_management_ui
    restart: always
    ports:
      - "8084:8080"
    depends_on:
      - management_api
    environment:
      - MGMT_API_URL=http://localhost:8083/management/organizations/DEFAULT/environments/DEFAULT/
    volumes:
      - ./logs/apim-management-ui:/var/log/nginx

  portal_ui:
    image: graviteeio/apim-portal-ui:${APIM_VERSION:-3}
    container_name: gio_apim_portal_ui
    restart: always
    ports:
      - "8085:8080"
    depends_on:
      - management_api
    environment:
      - PORTAL_API_URL=http://localhost:8083/portal/environments/DEFAULT
    volumes:
      - ./logs/apim-portal-ui:/var/log/nginx

  # 5G-Apps & Services Catalogue
  zookeeper:
    image: wurstmeister/zookeeper
    restart: always
    ports:
      - "2181:2181"

  kafka:
    container_name: kafka
    build:
      context: ./kafka/
      dockerfile: Dockerfile
    ports:
      - "9092:9092"
    expose:
      - "9093"
    restart: always
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  postgres:
    image: postgres:10-alpine
    restart: always
    volumes:
      - /opt/5gcatalogue-app/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: cataloguedb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - ${POSTGRES_PORT}:5432

  5gCatalogueApp:
    container_name: 5gCatalogueApp
    image: 5g-catalogue-app:${CATALOGUE_VERSION}
    restart: always
    build: 
      context: ./5g-catalogue-app/
      dockerfile: Dockerfile
      args:
        catalogue_repo: https://github.com/nextworks-it/5g-catalogue.git
        catalogue_version: ${CATALOGUE_VERSION}
        catalogue_server_port: ${CATALOGUE_SERVER_PORT}
        nfv_sol_libs_repo: https://github.com/nextworks-it/nfv-sol-libs.git
        nfv_sol_libs_version: ${CATALOGUE_SOL_LIBS_VERSION}
        nfv_ifa_libs_repo: https://github.com/nextworks-it/nfv-ifa-libs.git
        nfv_ifa_libs_version: ${CATALOGUE_IFA_LIBS_VERSION}
        mano_id: ${MANO_ID}
        mano_type: ${MANO_TYPE}
        mano_site: ${MANO_SITE}
        mano_ip: ${MANO_IP}
        mano_port: ${MANO_PORT}
        mano_username: ${MANO_USERNAME}
        mano_password: ${MANO_PASSWORD}
        mano_project: ${MANO_PROJECT}
        public_catalogue_id: ${PUBLIC_CATALOGUE_ID}
        public_catalogue_url: ${PUBLIC_CATALOGUE_URL}
        proxy_enabled: ${PROXY_ENABLED}
    volumes:
      - /opt/5gcatalogue-app/catalogueStorage:/home/catalogueStorage
      - /opt/5gcatalogue-app/manoStorage:/home/manoStorage
      - /opt/5gcatalogue-app/logs:/var/log/5gcatalogue
    env_file:
     - 5g-catalogue-app/profiles/${CATALOGUE_PROFILE}.env
    environment:
        CATALOGUE_SERVER_PORT: ${CATALOGUE_SERVER_PORT}
        CATALOGUE_POSTGRES_HOST: postgres:5432
        CATALOGUE_KAFKA_HOST: kafka:9093
        CATALOGUE_SCOPE: ${CATALOGUE_SCOPE}
        KEYCLOAK_AUTHENTICATION: ${KEYCLOAK_AUTHENTICATION}
        KEYCLOAK_REALM: ${KEYCLOAK_REALM}
        KEYCLOAK_URL: ${KEYCLOAK_URL}
        KEYCLOAK_CLIENT: ${KEYCLOAK_BE_CLIENT}
        KEYCLOAK_PUBLIC_CLIENT: ${KEYCLOAK_BE_PUBLIC_CLIENT}
        KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_BE_CLIENT_SECRET}
        KEYCLOAK_ADMIN_ROLE: ${KEYCLOAK_ADMIN_ROLE}
        KEYCLOAK_USER_ROLE: ${KEYCLOAK_USER_ROLE}
        KEYCLOAK_USER_GROUP: ${KEYCLOAK_USER_GROUP}
        SITE_INVENTORY_URL: ${SITE_INVENTORY_URL}
    ports:
      - ${CATALOGUE_SERVER_PORT}:${CATALOGUE_SERVER_PORT}
    depends_on:
      - kafka
      - postgres

  5gCatalogueGui:
    container_name: 5gCatalogueGui
    image: 5g-catalogue-gui:${CATALOGUE_VERSION}
    restart: always
    build: 
      context: ./5g-catalogue-gui/
      dockerfile: Dockerfile
      args:
        catalogue_repo: https://github.com/nextworks-it/5g-catalogue.git
        catalogue_version: ${CATALOGUE_VERSION}
        catalogue_server_port: ${CATALOGUE_SERVER_PORT}
        catalogue_scope: ${CATALOGUE_SCOPE}
        catalogue_profile: ${CATALOGUE_PROFILE}
        keycloak_enabled: ${KEYCLOAK_AUTHENTICATION}
        keycloak_url: ${KEYCLOAK_URL}
        keycloak_realm: ${KEYCLOAK_REALM}
        keycloak_gui_client: ${KEYCLOAK_GUI_CLIENT}
    ports:
      - ${CATALOGUE_GUI_PORT}:80
    depends_on:
      - 5gCatalogueApp

  # Resource Definition Translator
  translator:
    container_name: resource-definition-translator
    image: resource-definition-translator:${TRANSLATOR_VERSION}
    restart: always
    build:
      context: ./resource-definition-translator/
      dockerfile: Dockerfile
      args:
        NFV_SOL006_LIBS_REPO: https://github.com/nextworks-it/nfv-sol-libs.git
        NFV_SOL006_LIBS_VERSION: ${NFV_SOL006_LIBS_VERSION}
        TMF_INFO_MODELS_REPO: https://github.com/5GZORRO/resource-and-service-offer-catalog.git
        TMF_INFO_MODELS_VERSION: ${TMF_INFO_MODELS_VERSION}
        TRANSLATOR_REPO: https://github.com/5GZORRO/resource-definition-translator.git
        TRANSLATOR_VERSION: ${TRANSLATOR_VERSION}
    environment:
      TRANSLATOR_HOSTNAME: ${TRANSLATOR_HOSTNAME}
      SERVER_PORT: ${TRANSLATOR_SERVER_PORT}
      OFFER_CATALOG_HOSTNAME: ${OFFER_CATALOG_HOSTNAME}
      OFFER_CATALOG_PORT: ${OFFER_CATALOG_PORT}
      DESCRIPTOR_SOURCE_HOSTNAME: ${DESCRIPTOR_SOURCE_HOSTNAME}
      DESCRIPTOR_SOURCE_PORT: ${DESCRIPTOR_SOURCE_PORT}
      POSTGRES_HOSTNAME: postgres
      POSTGRES_PORT: 5432
      POSTGRES_MODE: ${POSTGRES_MODE}
      POSTGRES_USER: postgres
      POSTGRES_PSW: postgres
    ports:
      - ${TRANSLATOR_SERVER_PORT}:${TRANSLATOR_SERVER_PORT}
    depends_on:
      - postgres